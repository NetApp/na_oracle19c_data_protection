#################################################################
#################################################################
- block:
########## Get Cluster Management IP ##############
    - name: Get Cloud Manager IP
      uri: 
        url: "http://{{ msg[0].private_ip_address }}/occm/api/vsa/working-environments?fields=status,ontapClusterProperties,interClusterLifs&tenantId={{ msgs.workspacePublicId }}"
        method: GET
        return_content: yes
        headers:
          Content-Type: application/json
          Authorization: "{{ connector_accesstoken.json.access_token }}"
      register: ip
    - debug: var=ip.json[0].ontapClusterProperties.systemManagerUrl
    - set_fact:
        ipd: "{{ ip.json[0].ontapClusterProperties.systemManagerUrl | regex_findall('\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b') }}"
     
     
########## Create Snapmirror Policy ##############
    - name: Create Snapmiror Policy
      netapp.ontap.na_ontap_snapmirror_policy:
        hostname: "{{ ipd[0] }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        state: present
        vserver: "{{ dst_vserver }}"
        policy_name: "{{ snapmirror_policy }}"
        policy_type: async_mirror
        comment: "Created by Ansible"
        https: true
        validate_certs: false

    - name: Obtain Oracle Consistency Group Volumes
      set_fact:
        src_cg_vols: "{{ src_orabinary_vols + src_db_vols + src_archivelog_vols }}"
    - debug:
        msg: "Source Consistency Group Volumes {{ src_cg_vols }}"

    
################## Get InterCluster Lif IP for Destination ###################
    - name: Get LIF info
      netapp.ontap.na_ontap_info:
        hostname: "{{ ipd[0] }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        use_rest: never
        https: true
        validate_certs: false
        gather_subset:
          - net_interface_info
        query:
           net-interface-info:
             role: intercluster
        desired_attributes:
           net-interface-info:
             address:
      register: info
    - debug: var=info.ontap_info.net_interface_info
    - set_fact:
        my_var: "{{ info | json_query('ontap_info.net_interface_info.*.address') }}"
    - debug: var=my_var[0]

################## Get InterCluster Lif IP for Source ###################
    - name: Limit Info Gathering to Volume and Lun Information as Cluster Admin
      netapp.ontap.na_ontap_info:
        hostname: "{{ src_cluster_ip }}"
        username: "{{ src_cluster_username }}"
        password: "{{ src_cluster_password }}"
        use_rest: never
        https: true
        validate_certs: false
        gather_subset:
          - net_interface_info
        query:
           net-interface-info:
             role: intercluster
        desired_attributes:
           net-interface-info:
             address:
      register: info
    - debug: var=info.ontap_info.net_interface_info
    - set_fact:
        my_vars: "{{ info | json_query('ontap_info.net_interface_info.*.address') }}"
    - debug: var=my_vars[0]
    
    
############ Cluster Peer #############
    - name: Create cluster peer
      netapp.ontap.na_ontap_cluster_peer:
        state: present
        source_intercluster_lifs: "{{ my_vars[0] }}"
        dest_intercluster_lifs:  "{{ my_var[0] }}"
        passphrase: "{{ passphrase }}"
        hostname: "{{ src_cluster_ip }}"
        username: "{{ src_cluster_username }}"
        password: "{{ src_cluster_password }}"
        dest_hostname: "{{ ipd[0] }}"
        https: true
        validate_certs: false
        dest_username: "{{ src_cluster_username }}"
        dest_password: "{{ src_cluster_password }}"
      register: cluster_peer

########## Vserver Peer ##############
    - name: Create vserver peer
      netapp.ontap.na_ontap_vserver_peer:
        state: present
        peer_vserver: "{{ dst_vserver }}"
        peer_cluster: "{{ dst_cluster_name }}"
        vserver: "{{ src_vserver }}"
        applications: snapmirror
        hostname: "{{ src_cluster_ip }}"
        username: "{{ src_cluster_username }}"
        password: "{{ src_cluster_password }}"
        https: true
        validate_certs: false
        peer_options:
          hostname: "{{ ipd[0] }}"
          username: "{{ dst_cluster_username }}"
          password: "{{ dst_cluster_password }}"
      register: vserver_peer



#################################################################
#################################################################

    - name: Create ONTAP/ONTAP SnapMirror
      netapp.ontap.na_ontap_snapmirror:
        hostname: "{{ ipd[0] }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        state: present
        source_endpoint:
          cluster: "{{ src_cluster_name }}"
          path: "{{ src_vserver + ':' + item }}"
        destination_endpoint:
          cluster: "{{ dst_cluster_name }}"
          path: "{{ dst_vserver + ':' + 'dr_' + item }}"
        initialize: true
        create_destination:
          enabled: true
        policy: "{{ snapmirror_policy }}"
        relationship_type: extended_data_protection
        https: true
        validate_certs: false
        use_rest: always
      with_items:
        - "{{ src_cg_vols }}"
      
 
