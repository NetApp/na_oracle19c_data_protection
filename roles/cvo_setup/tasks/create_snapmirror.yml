#################################################################
#################################################################
- block:
    - name: Create Snapmiror Policy
      netapp.ontap.na_ontap_snapmirror_policy:
        hostname: "{{ dst_cluster_ip }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        state: present
        vserver: "{{ dst_vserver }}"
        policy_name: "{{ snapmirror_policy }}"
        policy_type: async_mirror
        comment: "Created by Ansible"
        https: true
        validate_certs: false

    - name: Obtain Oracle Consistency Group Volumes
      set_fact:
        src_cg_vols: "{{ src_orabinary_vols + src_db_vols + src_archivelog_vols }}"
    - debug:
        msg: "Source Consistency Group Volumes {{ src_cg_vols }}"

#    - name: Create ONTAP/ONTAP SnapMirror
#      netapp.cloudmanager.na_cloudmanager_snapmirror:
#        state: present
#        source_working_environment_name: "{{ src_cluster_name }}"
#        source_working_environment_id: OnPremWorkingEnvironment-HauAk0XV
#        destination_working_environment_id: VsaWorkingEnvironment-zE7ZBzPM
#        source_volume_name: ora1_u01  # "{{ item }}"
#        destination_working_environment_name: "{{ cvo_name }}"
#        destination_volume_name: test_vol1 #"{{ 'dr_' + item }}"
#        policy: "{{ snapmirror_policy }}"
#        client_id: "zzUFO6Sf6i4eu2Jm9mG9QutjquiWCUv5"
#        refresh_token: "{{ token }}"
#        source_svm_name: ora_svm01
#      with_items:
#        - "{{ src_cg_vols }}"
#  tags:
#    - ontap_snapmirror_create
#    - ontap_snapmirror_policy
#    - ontap_snapmirror
#  rescue:
#    - name: Failure
#      fail:
#        msg:
#        - Create destination volume for SnapMirror failed with error - "{{ snapmirror_create.stderr }}"
#        - Possible troubleshooting steps:
#        - 1. Check if ONTAP API is reachable
#        - 2. Check if variables defined adhere to the guidelines


############################# Create Access Token ##################
    - name: Create access token with username/password
      uri:
        url: "https://netapp-cloud-account.auth0.com/oauth/token"
        method: POST
        body_format: json
        body:
          grant_type: password
          username: "{{ email_id }}"
          password: "{{ password }}"
          audience: "https://api.cloud.netapp.com"
          scope: profile
          client_id: QC3AgHk6qdbmC7Yyr82ApBwaaJLwRrNO
        headers:
          Content-Type: application/json
      register: connector_accesstoken
      when: connector_access == "password"
    - name: Create access token with refresh token
      uri:
        url: "https://netapp-cloud-account.auth0.com/oauth/token"
        method: POST
        body_format: json
        body:
          grant_type: refresh_token
          refresh_token: "{{ token }}"
          client_id: "Mu0V1ywgYteI6w1MbD15fKfVIUrNXGWC"
        headers:
          Content-Type: application/json
      register: connector_accesstoken
      when: connector_access == "refresh_token"
    - debug: var=connector_accesstoken
    
#################################################################
#################################################################

#    - name: Create ONTAP/ONTAP SnapMirror
#      netapp.ontap.na_ontap_snapmirror:
#        hostname: "{{ dst_cluster_ip }}"
#        username: "{{ dst_cluster_username }}"
#        password: "{{ dst_cluster_password }}"
#        state: present
#        source_endpoint:
#          cluster: "{{ src_cluster_name }}"
#          path: "{{ src_vserver + ':' + item }}"
#        destination_endpoint:
#          cluster: "{{ dst_cluster_name }}"
#          path: "{{ dst_vserver + ':' + 'dr_' + item }}"
#        initialize: true
#        create_destination:
#          enabled: true
#        policy: "{{ snapmirror_policy }}"
#        relationship_type: extended_data_protection
#        https: true
#        validate_certs: false
#        use_rest: always
#      with_items:
#        - "{{ src_cg_vols }}"
#  tags:
#    - ontap_snapmirror_create
#    - ontap_snapmirror_policy
#    - ontap_snapmirror
#  rescue:
#    - name: Failure
#      fail:
#        msg:
#        - Create destination volume for SnapMirror failed with error - "{{ snapmirror_create.stderr }}"
#        - Possible troubleshooting steps:
#        - 1. Check if ONTAP API is reachable
#        - 2. Check if variables defined adhere to the guidelines
################## Get InterCluster Lif IPS ###################
- block:
    - name: Limit Info Gathering to Volume and Lun Information as Cluster Admin
      netapp.ontap.na_ontap_info:
        hostname: "{{ dst_cluster_ip }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        use_rest: never
        gather_subset:
          - net_interface_info
      register: ontap_info
    - debug: var=ontap_info

################### Create Snapmirror ###################
#    - name: Create Snapmirror from On-Prem to CVO
#      uri:
#        url: "http://172.30.0.139/occm/api/replication/vsa"
#        method: POST
#        body_format: json
#        body:
#          replicationRequest:
#            sourceWorkingEnvironmentId: OnPremWorkingEnvironment-HauAk0XV
#            destinationWorkingEnvironmentId: VsaWorkingEnvironment-zE7ZBzPM
#            sourceInterclusterLifIps: 
#             - 10.61.185.26
#            destinationInterclusterLifIps: 
#             - 172.30.0.168	
#            policyName: "{{ snapmirror_policy }}"
            #maxTransferRate: "1024"
#          replicationVolume:
#            sourceSvmName: ora_svm01
#            sourceVolumeName: "{{ item }}"
#            destinationVolumeName: "{{ 'dr_' + item }}"
#            destinationAggregateName: aggr1
            #numOfDisksApprovedToAdd: 2
#            advancedMode: false
#        headers:
#          Content-Type: application/json
#          Authorization: "{{ connector_accesstoken.json.access_token }}"
#      with_items:
#        - "{{ src_cg_vols }}"
#      register: result
#      failed_when:
#        - ' "202" not in result.msg '
  tags:
    - ontap_snapmirror_create
    - ontap_snapmirror_policy
    - ontap_snapmirror        
 
