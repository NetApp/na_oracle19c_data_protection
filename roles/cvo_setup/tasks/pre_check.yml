---  

- name: Get Cloud Manager IP
  uri:
    url: "http://172.30.0.186/occm/api/vsa/working-environments?fields=status,ontapClusterProperties,interClusterLifs&tenantId=workspace-TtPXVvC8"
    method: GET
    return_content: yes
    headers:
      Content-Type: application/json
      Authorization: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ik5rSXlPVFUzUWpZek1ESkRPVGd5TlRJMU1EUkZNVFpFUTBFd1JEUkJRVGxFT1VFMU5UUkNOZyJ9.eyJodHRwOi8vY2xvdWQubmV0YXBwLmNvbS9mdWxsX25hbWUiOiJBaG1hZCBTdWZpYW4iLCJodHRwOi8vY2xvdWQubmV0YXBwLmNvbS9lbWFpbF92ZXJpZmllZCI6ZmFsc2UsImh0dHA6Ly9jbG91ZC5uZXRhcHAuY29tL2Nvbm5lY3Rpb25faWQiOiJjb25fdk5DdjdsdjBKa2t5OWxMZCIsImh0dHA6Ly9jbG91ZC5uZXRhcHAuY29tL2lzX2ZlZGVyYXRlZCI6dHJ1ZSwiaHR0cDovL2Nsb3VkLm5ldGFwcC5jb20vaW50ZXJuYWwiOiJOZXRBcHAiLCJpc3MiOiJodHRwczovL25ldGFwcC1jbG91ZC1hY2NvdW50LmF1dGgwLmNvbS8iLCJzdWIiOiJ3YWFkfEg0dTFtY3c0OGppaEc3RVJ5MHY0SlFJLUdlQ2FkY2htb0NUdWlpeVZSTXMiLCJhdWQiOiJodHRwczovL2FwaS5jbG91ZC5uZXRhcHAuY29tIiwiaWF0IjoxNjMzNDQ5MDAzLCJleHAiOjE2MzM1MzU0MDMsImF6cCI6Ik11MFYxeXdnWXRlSTZ3MU1iRDE1ZktmVklVck5YR1dDIiwic2NvcGUiOiJvcGVuaWQgcHJvZmlsZSBlbWFpbCJ9.V5bKdNPE1ALv-g_pl86JGUjK59AZFEe5qdw6VWiAJfp-0l8ZsF6WZurfkN7dYy6a6bnbjztXiq_u06onTznAon_mMLWz7t0Bfes1GviRwYm5WIsaGeIfCPeHEJWh7bskcEpkqy4odVKXUGbojOmea1oewUpPbUUnV-pmj3KDE68drIYE_f6psi2s-lqW9ckezvsbXnNDNzZr49vAyU_NVy6XGMu2gi3e3CSVaSbB29vjWMxyJOl-uvu7ZhvRWmzkjkYgmblA53bWFetouSpqhxvQhlJCRWy55hW7DNHL-h2zzvKjTDY4TVYPhAYHA4qfG2vEWL9B9GZdl_TELM69bQ
      #"Bearer {{ connector_accesstoken.json.access_token }}"
  register: ip
  tags:
    - pre_check
#- debug: var=ip.json[0].ontapClusterProperties
#  tags:
#    - pre_check

##### Check some pre-checks for Centos8 #####
- name: Install the pre-reqs for connector
  become: yes
  pip:
    name:
       - boto3
       - chardet
       - urllib3
       - requests
       - awscli
       - pexpect
  tags:
    - pre_check

##### Running Credentials ########
- name: Run aws configure
  expect:
    command: aws configure
    responses:
      AWS Access Key ID:  "{{ access_key }}"                                                                                    
      AWS Secret Access Key: "{{ secret_key }}"                                                                                
      Default region name: "{{ region_deploy }}"
      Default output format: ""
  no_log: true

  tags:
    - pre_check


########## Create Role ########
- name: Create Role
  iam_role:
    name: "{{ aws_role_name }}"
    assume_role_policy_document: "{{ lookup('file','policy.json') }}"
    state: present
    validate_certs: false
    managed_policies:
      - "{{ aws_policy }}"
    state: present
  tags:
    - pre_check


########################################################

- name: Pause for 2 minutes to Create Iam Instance Profile
  pause:
    minutes: 2
    



