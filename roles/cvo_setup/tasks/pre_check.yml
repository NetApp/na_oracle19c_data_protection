---  

- name: Get Cloud Manager IP
  uri:
    url: "http://172.30.0.186/occm/api/vsa/working-environments?fields=status,ontapClusterProperties,interClusterLifs&tenantId=workspace-TtPXVvC8"
    method: GET
    return_content: yes
    headers:
      Content-Type: application/json
      Authorization: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ik5rSXlPVFUzUWpZek1ESkRPVGd5TlRJMU1EUkZNVFpFUTBFd1JEUkJRVGxFT1VFMU5UUkNOZyJ9.eyJodHRwOi8vY2xvdWQubmV0YXBwLmNvbS9mdWxsX25hbWUiOiJBaG1hZCBTdWZpYW4iLCJodHRwOi8vY2xvdWQubmV0YXBwLmNvbS9lbWFpbF92ZXJpZmllZCI6ZmFsc2UsImh0dHA6Ly9jbG91ZC5uZXRhcHAuY29tL2Nvbm5lY3Rpb25faWQiOiJjb25fdk5DdjdsdjBKa2t5OWxMZCIsImh0dHA6Ly9jbG91ZC5uZXRhcHAuY29tL2lzX2ZlZGVyYXRlZCI6dHJ1ZSwiaHR0cDovL2Nsb3VkLm5ldGFwcC5jb20vaW50ZXJuYWwiOiJOZXRBcHAiLCJpc3MiOiJodHRwczovL25ldGFwcC1jbG91ZC1hY2NvdW50LmF1dGgwLmNvbS8iLCJzdWIiOiJ3YWFkfEg0dTFtY3c0OGppaEc3RVJ5MHY0SlFJLUdlQ2FkY2htb0NUdWlpeVZSTXMiLCJhdWQiOiJodHRwczovL2FwaS5jbG91ZC5uZXRhcHAuY29tIiwiaWF0IjoxNjMzMzYxMDk1LCJleHAiOjE2MzM0NDc0OTUsImF6cCI6Ik11MFYxeXdnWXRlSTZ3MU1iRDE1ZktmVklVck5YR1dDIiwic2NvcGUiOiJvcGVuaWQgcHJvZmlsZSBlbWFpbCJ9.tXY4QeIXOmbPX0IC7mn7WqyjUM7-JkNwot42BW5mj9nfhNV35fw9tTcp4T7WXUm1pJnEHJ3bAAc5Ga3VNEcSP-cQlHLdQNIgfgG1smxtJZnkAXU2cY-WoxXBY4bqKlmSUbREKsBufCdSZ3KyMgYvTGDn8QEXS6TZ9CjmwkvyN_dM8bEhhBcjq2lW1cgMReF6TSaApQyhfbw4xiwh7jRK_P6Yl7G3Tbu2yPgixq9P9YWEzNlvfHYNE42vQaR8VRKPjFmzM0WNaqPsyH_l7WHVhZDYuOePBQmza1Syuw1FVhmZ0TAFcboTqILBTNEuQLW3W8tNNb4qCHtlNwir64as_A
      #"Bearer {{ connector_accesstoken.json.access_token }}"
  register: ip
  tags:
    - pre_check
- debug: var=ip.json
  tags:
    - pre_check

##### Check some pre-checks for Centos8 #####
- name: Install the pre-reqs for connector
  become: yes
  pip:
    name:
       - boto3
       - chardet
       - urllib3
       - requests
       - awscli
       - pexpect
  tags:
    - pre_check

##### Running Credentials ########
- name: Run aws configure
  expect:
    command: aws configure
    responses:
      AWS Access Key ID:  "{{ access_key }}"                                                                                    
      AWS Secret Access Key: "{{ secret_key }}"                                                                                
      Default region name: "{{ region_deploy }}"
      Default output format: ""
  no_log: true

  tags:
    - pre_check


########## Create Role ########
- name: Create Role
  iam_role:
    name: "{{ aws_role_name }}"
    assume_role_policy_document: "{{ lookup('file','policy.json') }}"
    state: present
    validate_certs: false
    managed_policies:
      - "{{ aws_policy }}"
    state: present
  tags:
    - pre_check


########################################################

- name: Pause for 2 minutes to Create Iam Instance Profile
  pause:
    minutes: 2
    



