#######################################################################
########### Create Intercluster LIFs on destination cluster ###########
#######################################################################

- block:
    - name: Create broadcast domain on destination cluster
      na_ontap_broadcast_domain:
        state: present
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        hostname: "{{ dst_cluster_ip }}"
        name: "{{ destination_intercluster_network_port_details.broadcast_domain }}"
        mtu: 9000
        ipspace: "{{ destination_intercluster_network_port_details.ipspace | default("Default") }}"
        ports: "{{ item[0] }}:{{ item[1] }}"
      with_nested:
        - "{{ nodes }}"
        - "{{ destination_intercluster_network_port_details.ports }}"
      register: destination_create_bd_register
  when: destination_intercluster_network_port_details.using_dedicated_ports|bool
  rescue:
    - name: Failure 
      fail:
        msg: 
        - Create broadcast domain on destination cluster failed with error - "{{ destination_create_bd_register.stderr }}"
        - Possible troubleshooting steps:
        - 1. Check if ONTAP API is reachable 
        - 2. Check if provided nodes and port details are correct
        - 3. Check if provided IPspace exists
        - 4. Check if variables defined adhere to the guidelines

- block:
    - name: Create ifgrps on destination cluster 
      na_ontap_net_ifgrp:
        state: present
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        hostname: "{{ dst_cluster_ip }}"
        distribution_function: ip
        name: "{{ destination_intercluster_network_port_details.ifgrp_name }}"
        ports: "{{ destination_intercluster_network_port_details.ports }}"
        mode: multimode
        node: "{{ item }}"
      with_items: "{{ nodes }}"
      register: destination_create_ifgrp_register
  when: destination_intercluster_network_port_details.using_dedicated_ports|bool and destination_intercluster_network_port_details.using_ifgrp|bool	  
  rescue:
    - name: Failure 
      fail:
        msg: 
        - Create ifgrps on destination cluster failed with error - "{{ destination_create_ifgrp_register.stderr }}"
        - Possible troubleshooting steps:
        - 1. Check if ONTAP API is reachable 
        - 2. Check if provided nodes and port details are correct
        - 3. Check if variables defined adhere to the guidelines

- block:
    - name: Create VLANs on individual ports on destination cluster
      na_ontap_net_vlan:
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        hostname: "{{ dst_cluster_ip }}"
        state: present
        vlanid: "{{ destination_intercluster_network_port_details.vlan_id }}"
        node: "{{ item[0] }}"
        parent_interface: "{{ item[1] }}"
      with_nested: 
        - "{{ nodes }}"
        - "{{ destination_intercluster_network_port_details.ports }}"
      register: destination_create_vlans_individual_register
  when: destination_intercluster_network_port_details.using_vlans|bool and not destination_intercluster_network_port_details.using_ifgrp|bool
  rescue:
    - name: Failure 
      fail:
        msg: 
        - Create VLANs on individual ports on destination cluster failed with error - "{{ destination_create_vlans_individual_register.stderr }}"
        - Possible troubleshooting steps:
        - 1. Check if ONTAP API is reachable 
        - 2. Check if provided nodes and port details are correct
        - 3. Check if variables defined adhere to the guidelines

- block:
    - name: Create VLANs on ifgrps on destination cluster
      na_ontap_net_vlan:
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        hostname: "{{ dst_cluster_ip }}"
        state: present
        vlanid: "{{ destination_intercluster_network_port_details.vlan_id }}"
        node: "{{ item }}"
        parent_interface: "{{ destination_intercluster_network_port_details.ifgrp_name }}"
      with_items: 
        - "{{ nodes }}"
      register: destination_create_vlans_ifgrps_register
  when: destination_intercluster_network_port_details.using_vlans|bool and destination_intercluster_network_port_details.using_ifgrp|bool
  rescue:
    - name: Failure  
      fail:
        msg: 
        - Create VLANs on ifgrps on destination cluster failed with error - "{{ destination_create_vlans_ifgrps_register.stderr }}"
        - Possible troubleshooting steps:
        - 1. Check if ONTAP API is reachable 
        - 2. Check if provided nodes and port details are correct
        - 3. Check if variables defined adhere to the guidelines

- block:
    - name: Create Failover Groups in case of shared ports on destination cluster
      na_ontap_command:
        hostname: "{{ dst_cluster_ip }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        command: ['network', 'interface', 'failover-groups', 'create', '-failover-group', '{{ destination_intercluster_network_port_details.failover_group_name }}']
        privilege: 'admin'
        return_dict: true
        https: true
        validate_certs: false
      register: destination_create_failover_group
  when: not destination_intercluster_network_port_details.using_dedicated_ports|bool
  rescue:
    - name: Failure 
      fail:
        msg: 
        - Create Failover Groups in case of shared ports on destination cluster failed with error - "{{ destination_create_failover_group.stderr }}"
        - Possible troubleshooting steps:
        - Check if ONTAP API is reachable 
        - Check if variables defined adhere to the guidelines

- block:
    - name: Add individual shared ports to failover group on destination cluster
      na_ontap_command: 
        hostname: "{{ dst_cluster_ip }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        command: ['network', 'interface', 'failover-groups', 'add-targets', '-failover-group', '{{ destination_intercluster_network_port_details.failover_group_name }}', '-targets', '{{ item[0] }}:{{ item[1] }}']
        privilege: 'admin'
        return_dict: true
        https: true
        validate_certs: false
      with_nested:
        - "{{ nodes }}"
        - "{{ destination_intercluster_network_port_details.ports }}"
      register: destination_add_ports_to_failover_group
  when: not destination_intercluster_network_port_details.using_dedicated_ports|bool and not destination_intercluster_network_port_details.using_vlans|bool and not destination_intercluster_network_port_details.using_ifgrp|bool
  rescue:
    - name: Failure 
      fail:
        msg: 
        - Add individual shared ports to failover group on destination cluster failed with error - "{{ destination_add_ports_to_failover_group.stderr }}"
        - Possible troubleshooting steps:
        - Check if ONTAP API is reachable 
        - Check if provided nodes and port details are correct
        - Check if variables defined adhere to the guidelines

- block:
    - name: Add individual shared vlan ports to failover group on destination cluster
      na_ontap_command:
        hostname: "{{ dst_cluster_ip }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        command: ['network', 'interface', 'failover-groups', 'add-targets', '-failover-group', '{{ destination_intercluster_network_port_details.failover_group_name }}', '-targets', '{{ item[0] }}:{{ item[1] }}.{{ destination_intercluster_network_port_details.vlan_id }}']
        privilege: 'admin'
        return_dict: true
        https: true
        validate_certs: false
      with_nested:
        - "{{ nodes }}"
        - "{{ destination_intercluster_network_port_details.ports }}"
      register: destination_add_vlanports_to_failover_group
  when: not destination_intercluster_network_port_details.using_dedicated_ports|bool and destination_intercluster_network_port_details.using_vlans|bool and not destination_intercluster_network_port_details.using_ifgrp|bool
  rescue:
    - name: Failure  
      fail:
        msg: 
        - Add individual shared vlan ports to failover group on destination cluster failed with error - "{{ destination_add_vlanports_to_failover_group.stderr }}"
        - Possible troubleshooting steps:
        - Check if ONTAP API is reachable 
        - Check if provided nodes, vlan and port details are correct
        - Check if variables defined adhere to the guidelines

- block:
    - name: Add shared ifgrps to failover group on destination cluster
      na_ontap_command:
        hostname: "{{ dst_cluster_ip }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        command: ['network', 'interface', 'failover-groups', 'add-targets', '-failover-group', '{{ destination_intercluster_network_port_details.failover_group_name }}', '-targets', '{{ item }}:{{ destination_intercluster_network_port_details.ifgrp_name }}']
        privilege: 'admin'
        return_dict: true
        https: true
        validate_certs: false
      with_items:
        - "{{ nodes }}"
      register: destination_add_ifgrps_to_failover_group
  when: not destination_intercluster_network_port_details.using_dedicated_ports|bool and not destination_intercluster_network_port_details.using_vlans|bool and destination_intercluster_network_port_details.using_ifgrp|bool
  rescue:
    - name: Failure  
      fail:
        msg: 
        - Add shared ifgrps to failover group on destination cluster failed with error - "{{ destination_add_ifgrps_to_failover_group.stderr }}"
        - Possible troubleshooting steps:
        - Check if ONTAP API is reachable 
        - Check if provided nodes and ifgrp details are correct
        - Check if variables defined adhere to the guidelines

- block:
    - name: Add shared vlan ifgrps to failover group on destination cluster
      na_ontap_command:
        hostname: "{{ dst_cluster_ip }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        command: ['network', 'interface', 'failover-groups', 'add-targets', '-failover-group', '{{ destination_intercluster_network_port_details.failover_group_name }}', '-targets', '{{ item }}:{{ destination_intercluster_network_port_details.ifgrp_name }}.{{ destination_intercluster_network_port_details.vlan_id }}']
        privilege: 'admin'
        return_dict: true
        https: true
        validate_certs: false
      with_items:
        - "{{ nodes }}"
      register: destination_add_vlanifgrps_to_failover_group
  when: not destination_intercluster_network_port_details.using_dedicated_ports|bool and destination_intercluster_network_port_details.using_vlans|bool and destination_intercluster_network_port_details.using_ifgrp|bool
  rescue:
    - name: Failure  
      fail:
        msg: 
        - Add shared vlan ifgrps to failover group on destination cluster failed with error - "{{ destination_add_vlanifgrps_to_failover_group.stderr }}"
        - Possible troubleshooting steps:
        - Check if ONTAP API is reachable 
        - Check if provided nodes, vlan and ifgrp details are correct
        - Check if variables defined adhere to the guidelines

- block:
    - name: Create cluster interface with dedicated ports on destination cluster
      na_ontap_interface:
        hostname: "{{ dst_cluster_ip }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        state: present
        interface_name: "{{ item.name }}"
        home_port: "{{ item.home_port }}"
        home_node: "{{ item.node }}"
        role: intercluster
        admin_status: up
        address: "{{ item.address }}"
        netmask: "{{ item.netmask }}"
        failover_policy: broadcast-domain-wide
        is_auto_revert: true
        https: true
        validate_certs: false
      with_items: "{{ destination_intercluster_lif_details }}"
      register: destination_create_cluster_interface_dedicated_register
  when: destination_intercluster_network_port_details.using_dedicated_ports|bool
  rescue:
    - name: Failure  
      fail:
        msg: 
        - Create cluster interface with dedicated ports on destination cluster failed with error - "{{ destination_create_cluster_interface_dedicated_register.stderr }}"
        - Possible troubleshooting steps:
        - Check if ONTAP API is reachable 
        - Check if intercluster LIF details provided are correct
        - Check if variables defined adhere to the guidelines

- block:
    - name: Create intercluster interface with shared ports on destination cluster
      na_ontap_interface:
        hostname: "{{ dst_cluster_ip }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        state: present
        interface_name: "{{ item.name }}"
        home_port: "{{ item.home_port }}"
        home_node: "{{ item.node }}"
        role: intercluster
        admin_status: up
        address: "{{ item.address }}"
        netmask: "{{ item.netmask }}"
        failover_group: "{{ destination_intercluster_network_port_details.failover_group_name }}"
        is_auto_revert: true
        https: true
        validate_certs: false
      with_items: "{{ destination_intercluster_lif_details }}"
      register: destination_create_intercluster_interface_dedicated_register
  when: destination_intercluster_network_port_details.using_dedicated_ports|bool
  rescue:
    - name: Failure 
      fail:
        msg: 
        - Create intercluster interface with shared ports on destination cluster failed with error - "{{ destination_create_intercluster_interface_dedicated_register.stderr }}"
        - Possible troubleshooting steps:
        - Check if ONTAP API is reachable 
        - Check if intercluster LIF details provided are correct
        - Check if variables defined adhere to the guidelines
